// Mocks generated by Mockito 5.0.17 from annotations
// in ditonton/test/helpers/usecase_helper.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i7;
import 'package:ditonton/domain/entities/movie.dart' as _i24;
import 'package:ditonton/domain/entities/movie_detail.dart' as _i22;
import 'package:ditonton/domain/entities/tv.dart' as _i8;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i12;
import 'package:ditonton/domain/entities/tv_episode.dart' as _i14;
import 'package:ditonton/domain/repositories/movie_repository.dart' as _i4;
import 'package:ditonton/domain/repositories/tv_repository.dart' as _i2;
import 'package:ditonton/domain/usecases/get_movie_detail.dart' as _i21;
import 'package:ditonton/domain/usecases/get_movie_recommendations.dart'
    as _i23;
import 'package:ditonton/domain/usecases/get_now_playing_movies.dart' as _i25;
import 'package:ditonton/domain/usecases/get_popular_movies.dart' as _i26;
import 'package:ditonton/domain/usecases/get_top_rated_movies.dart' as _i27;
import 'package:ditonton/domain/usecases/get_watchlist_movies.dart' as _i28;
import 'package:ditonton/domain/usecases/get_watchlist_status.dart' as _i29;
import 'package:ditonton/domain/usecases/remove_watchlist.dart' as _i30;
import 'package:ditonton/domain/usecases/save_watchlist.dart' as _i31;
import 'package:ditonton/domain/usecases/search_movies.dart' as _i32;
import 'package:ditonton/domain/usecases/tv/get_now_playing_tvs.dart' as _i5;
import 'package:ditonton/domain/usecases/tv/get_popular_tvs.dart' as _i9;
import 'package:ditonton/domain/usecases/tv/get_top_rated_tvs.dart' as _i10;
import 'package:ditonton/domain/usecases/tv/get_tv_detail.dart' as _i11;
import 'package:ditonton/domain/usecases/tv/get_tv_episode_detail.dart' as _i13;
import 'package:ditonton/domain/usecases/tv/get_tv_recommendations.dart'
    as _i15;
import 'package:ditonton/domain/usecases/tv/get_tv_watchlist_status.dart'
    as _i16;
import 'package:ditonton/domain/usecases/tv/get_watchlist_tvs.dart' as _i17;
import 'package:ditonton/domain/usecases/tv/remove_tv_watchlist.dart' as _i18;
import 'package:ditonton/domain/usecases/tv/save_tv_watchlist.dart' as _i19;
import 'package:ditonton/domain/usecases/tv/search_tvs.dart' as _i20;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTVRepository_0 extends _i1.Fake implements _i2.TVRepository {}

class _FakeEither_1<L, R> extends _i1.Fake implements _i3.Either<L, R> {}

class _FakeMovieRepository_2 extends _i1.Fake implements _i4.MovieRepository {}

/// A class which mocks [GetNowPlayingTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingTVs extends _i1.Mock implements _i5.GetNowPlayingTVs {
  MockGetNowPlayingTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i8.TV>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i8.TV>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [GetPopularTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVs extends _i1.Mock implements _i9.GetPopularTVs {
  MockGetPopularTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i8.TV>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i8.TV>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [GetTopRatedTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVs extends _i1.Mock implements _i10.GetTopRatedTVs {
  MockGetTopRatedTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  set repository(_i2.TVRepository? _repository) =>
      super.noSuchMethod(Invocation.setter(#repository, _repository),
          returnValueForMissingStub: null);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i8.TV>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i8.TV>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [GetTVDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVDetail extends _i1.Mock implements _i11.GetTVDetail {
  MockGetTVDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i12.TVDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i7.Failure, _i12.TVDetail>>.value(
                  _FakeEither_1<_i7.Failure, _i12.TVDetail>()))
          as _i6.Future<_i3.Either<_i7.Failure, _i12.TVDetail>>);
}

/// A class which mocks [GetEpisodeDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetEpisodeDetail extends _i1.Mock implements _i13.GetEpisodeDetail {
  MockGetEpisodeDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i14.TVEpisode>> execute(
          int? id, int? season, int? episode) =>
      (super.noSuchMethod(Invocation.method(#execute, [id, season, episode]),
          returnValue: Future<_i3.Either<_i7.Failure, _i14.TVEpisode>>.value(
              _FakeEither_1<_i7.Failure, _i14.TVEpisode>())) as _i6
          .Future<_i3.Either<_i7.Failure, _i14.TVEpisode>>);
}

/// A class which mocks [GetTVRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVRecommendations extends _i1.Mock
    implements _i15.GetTVRecommendations {
  MockGetTVRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i8.TV>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i8.TV>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [GetTVWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVWatchListStatus extends _i1.Mock
    implements _i16.GetTVWatchListStatus {
  MockGetTVWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [GetWatchlistTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVs extends _i1.Mock implements _i17.GetWatchlistTVs {
  MockGetWatchlistTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i8.TV>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i8.TV>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [RemoveTVWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTVWatchlist extends _i1.Mock implements _i18.RemoveTVWatchlist {
  MockRemoveTVWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [SaveTVWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTVWatchlist extends _i1.Mock implements _i19.SaveTVWatchlist {
  MockSaveTVWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(_i12.TVDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [SearchTVs].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTVs extends _i1.Mock implements _i20.SearchTVs {
  MockSearchTVs() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TVRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTVRepository_0()) as _i2.TVRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>> execute(String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
              returnValue: Future<_i3.Either<_i7.Failure, List<_i8.TV>>>.value(
                  _FakeEither_1<_i7.Failure, List<_i8.TV>>()))
          as _i6.Future<_i3.Either<_i7.Failure, List<_i8.TV>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i21.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, _i22.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i7.Failure, _i22.MovieDetail>>.value(
              _FakeEither_1<_i7.Failure, _i22.MovieDetail>())) as _i6
          .Future<_i3.Either<_i7.Failure, _i22.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i23.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i24.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i24.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i25.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i24.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i24.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i26.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i24.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i24.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i27.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i24.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i24.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i28.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i24.Movie>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i24.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i29.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i30.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i22.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i31.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> execute(
          _i22.MovieDetail? movie) =>
      (super.noSuchMethod(Invocation.method(#execute, [movie]),
              returnValue: Future<_i3.Either<_i7.Failure, String>>.value(
                  _FakeEither_1<_i7.Failure, String>()))
          as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i32.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.MovieRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeMovieRepository_2()) as _i4.MovieRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i24.Movie>>> execute(
          String? query) =>
      (super.noSuchMethod(Invocation.method(#execute, [query]),
          returnValue: Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>.value(
              _FakeEither_1<_i7.Failure, List<_i24.Movie>>())) as _i6
          .Future<_i3.Either<_i7.Failure, List<_i24.Movie>>>);
}
